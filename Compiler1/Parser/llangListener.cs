//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from llang.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="llangParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IllangListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] llangParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] llangParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterToplevel([NotNull] llangParser.ToplevelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitToplevel([NotNull] llangParser.ToplevelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.export"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExport([NotNull] llangParser.ExportContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.export"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExport([NotNull] llangParser.ExportContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.libimport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLibimport([NotNull] llangParser.LibimportContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.libimport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLibimport([NotNull] llangParser.LibimportContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.globalVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalVar([NotNull] llangParser.GlobalVarContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.globalVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalVar([NotNull] llangParser.GlobalVarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.fundef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFundef([NotNull] llangParser.FundefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.fundef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFundef([NotNull] llangParser.FundefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.structdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructdef([NotNull] llangParser.StructdefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.structdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructdef([NotNull] llangParser.StructdefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.enumdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumdef([NotNull] llangParser.EnumdefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.enumdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumdef([NotNull] llangParser.EnumdefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.defargslist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefargslist([NotNull] llangParser.DefargslistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.defargslist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefargslist([NotNull] llangParser.DefargslistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.defargitem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefargitem([NotNull] llangParser.DefargitemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.defargitem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefargitem([NotNull] llangParser.DefargitemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.structDeclList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructDeclList([NotNull] llangParser.StructDeclListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.structDeclList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructDeclList([NotNull] llangParser.StructDeclListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.structDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructDecl([NotNull] llangParser.StructDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.structDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructDecl([NotNull] llangParser.StructDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.enumDeclList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumDeclList([NotNull] llangParser.EnumDeclListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.enumDeclList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumDeclList([NotNull] llangParser.EnumDeclListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.enumDeclItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumDeclItem([NotNull] llangParser.EnumDeclItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.enumDeclItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumDeclItem([NotNull] llangParser.EnumDeclItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] llangParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] llangParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] llangParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] llangParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.flowstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlowstmt([NotNull] llangParser.FlowstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.flowstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlowstmt([NotNull] llangParser.FlowstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.whilestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhilestmt([NotNull] llangParser.WhilestmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.whilestmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhilestmt([NotNull] llangParser.WhilestmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.forstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForstmt([NotNull] llangParser.ForstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.forstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForstmt([NotNull] llangParser.ForstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.ifstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfstmt([NotNull] llangParser.IfstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.ifstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfstmt([NotNull] llangParser.IfstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.retstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRetstmt([NotNull] llangParser.RetstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.retstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRetstmt([NotNull] llangParser.RetstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.varDeclStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDeclStmt([NotNull] llangParser.VarDeclStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.varDeclStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDeclStmt([NotNull] llangParser.VarDeclStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStmt([NotNull] llangParser.AssignStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStmt([NotNull] llangParser.AssignStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.deferstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeferstmt([NotNull] llangParser.DeferstmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.deferstmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeferstmt([NotNull] llangParser.DeferstmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.assignop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignop([NotNull] llangParser.AssignopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.assignop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignop([NotNull] llangParser.AssignopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.funcallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncallStmt([NotNull] llangParser.FuncallStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.funcallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncallStmt([NotNull] llangParser.FuncallStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.argslist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgslist([NotNull] llangParser.ArgslistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.argslist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgslist([NotNull] llangParser.ArgslistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] llangParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] llangParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.varlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarlist([NotNull] llangParser.VarlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.varlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarlist([NotNull] llangParser.VarlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.elementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementlist([NotNull] llangParser.ElementlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.elementlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementlist([NotNull] llangParser.ElementlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.unaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryop([NotNull] llangParser.UnaryopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.unaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryop([NotNull] llangParser.UnaryopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.multop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultop([NotNull] llangParser.MultopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.multop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultop([NotNull] llangParser.MultopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddop([NotNull] llangParser.AddopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.addop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddop([NotNull] llangParser.AddopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.shiftop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftop([NotNull] llangParser.ShiftopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.shiftop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftop([NotNull] llangParser.ShiftopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.compop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompop([NotNull] llangParser.CompopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.compop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompop([NotNull] llangParser.CompopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.eqop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqop([NotNull] llangParser.EqopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.eqop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqop([NotNull] llangParser.EqopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.bitwiseop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwiseop([NotNull] llangParser.BitwiseopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.bitwiseop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwiseop([NotNull] llangParser.BitwiseopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.logicop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicop([NotNull] llangParser.LogicopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.logicop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicop([NotNull] llangParser.LogicopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="llangParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypename([NotNull] llangParser.TypenameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="llangParser.typename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypename([NotNull] llangParser.TypenameContext context);
}
