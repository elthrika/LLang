//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from grammar.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public partial class langLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, T__56=57, T__57=58, T__58=59, 
		T__59=60, T__60=61, Iden=62, Number=63, String=64, Whitespace=65, Comment=66;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
		"T__57", "T__58", "T__59", "T__60", "Iden", "Alpha", "Digit", "Number", 
		"HexNum", "BinNum", "IntNum", "FloatNum", "String", "StringChar", "EscapeSequence", 
		"Whitespace", "Comment"
	};


	public langLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'import'", "'\"'", "';'", "'global'", "'def'", "'('", "')'", "'->'", 
		"'struct'", "'{'", "'}'", "'enum'", "','", "':'", "'='", "'while'", "'for'", 
		"'in'", "'if'", "'else'", "'return'", "':='", "'*='", "'/='", "'%='", 
		"'+='", "'-='", "'<<='", "'>>='", "'&='", "'^='", "'|='", "'['", "'..'", 
		"']'", "'.'", "'-'", "'!'", "'~'", "'*'", "'/'", "'%'", "'+'", "'>>'", 
		"'<<'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'&'", "'|'", "'^'", 
		"'&&'", "'||'", "'void'", "'int'", "'float'", "'bool'", "'string'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "Iden", "Number", "String", "Whitespace", "Comment"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "grammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	static langLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static string _serializedATN = _serializeATN();
	private static string _serializeATN()
	{
	    StringBuilder sb = new StringBuilder();
	    sb.Append("\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x44");
		sb.Append("\x1B3\b\x1\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6");
		sb.Append("\t\x6\x4\a\t\a\x4\b\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f");
		sb.Append("\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10\t\x10\x4\x11\t\x11\x4");
		sb.Append("\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15\x4\x16\t\x16");
		sb.Append("\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B");
		sb.Append("\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4");
		sb.Append(" \t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4");
		sb.Append("(\t(\x4)\t)\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30");
		sb.Append("\t\x30\x4\x31\t\x31\x4\x32\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4");
		sb.Append("\x35\t\x35\x4\x36\t\x36\x4\x37\t\x37\x4\x38\t\x38\x4\x39\t\x39");
		sb.Append("\x4:\t:\x4;\t;\x4<\t<\x4=\t=\x4>\t>\x4?\t?\x4@\t@\x4\x41\t\x41");
		sb.Append("\x4\x42\t\x42\x4\x43\t\x43\x4\x44\t\x44\x4\x45\t\x45\x4\x46");
		sb.Append("\t\x46\x4G\tG\x4H\tH\x4I\tI\x4J\tJ\x4K\tK\x3\x2\x3\x2\x3\x2");
		sb.Append("\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5");
		sb.Append("\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\a");
		sb.Append("\x3\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n");
		sb.Append("\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3");
		sb.Append("\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3");
		sb.Append("\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13");
		sb.Append("\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3");
		sb.Append("\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17");
		sb.Append("\x3\x17\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x1A\x3");
		sb.Append("\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1D");
		sb.Append("\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3");
		sb.Append("\x1F\x3\x1F\x3 \x3 \x3 \x3!\x3!\x3!\x3\"\x3\"\x3#\x3#\x3#\x3");
		sb.Append("$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)\x3)\x3*\x3*\x3+");
		sb.Append("\x3+\x3,\x3,\x3-\x3-\x3-\x3.\x3.\x3.\x3/\x3/\x3\x30\x3\x30\x3");
		sb.Append("\x31\x3\x31\x3\x31\x3\x32\x3\x32\x3\x32\x3\x33\x3\x33\x3\x33");
		sb.Append("\x3\x34\x3\x34\x3\x34\x3\x35\x3\x35\x3\x36\x3\x36\x3\x37\x3");
		sb.Append("\x37\x3\x38\x3\x38\x3\x38\x3\x39\x3\x39\x3\x39\x3:\x3:\x3:\x3");
		sb.Append(":\x3:\x3;\x3;\x3;\x3;\x3<\x3<\x3<\x3<\x3<\x3<\x3=\x3=\x3=\x3");
		sb.Append("=\x3=\x3>\x3>\x3>\x3>\x3>\x3>\x3>\x3?\x3?\x3?\a?\x161\n?\f?");
		sb.Append("\xE?\x164\v?\x3@\x3@\x3\x41\x3\x41\x3\x42\x3\x42\x3\x42\x3\x42");
		sb.Append("\x5\x42\x16E\n\x42\x3\x43\x3\x43\x3\x43\x6\x43\x173\n\x43\r");
		sb.Append("\x43\xE\x43\x174\x3\x44\x3\x44\x3\x44\x6\x44\x17A\n\x44\r\x44");
		sb.Append("\xE\x44\x17B\x3\x45\x5\x45\x17F\n\x45\x3\x45\x6\x45\x182\n\x45");
		sb.Append("\r\x45\xE\x45\x183\x3\x46\x5\x46\x187\n\x46\x3\x46\x6\x46\x18A");
		sb.Append("\n\x46\r\x46\xE\x46\x18B\x3\x46\x3\x46\x6\x46\x190\n\x46\r\x46");
		sb.Append("\xE\x46\x191\x3G\x3G\aG\x196\nG\fG\xEG\x199\vG\x3G\x3G\x3H\x3");
		sb.Append("H\x5H\x19F\nH\x3I\x3I\x3I\x3J\x6J\x1A5\nJ\rJ\xEJ\x1A6\x3J\x3");
		sb.Append("J\x3K\x3K\aK\x1AD\nK\fK\xEK\x1B0\vK\x3K\x3K\x2\x2L\x3\x3\x5");
		sb.Append("\x4\a\x5\t\x6\v\a\r\b\xF\t\x11\n\x13\v\x15\f\x17\r\x19\xE\x1B");
		sb.Append("\xF\x1D\x10\x1F\x11!\x12#\x13%\x14\'\x15)\x16+\x17-\x18/\x19");
		sb.Append("\x31\x1A\x33\x1B\x35\x1C\x37\x1D\x39\x1E;\x1F= ?!\x41\"\x43");
		sb.Append("#\x45$G%I&K\'M(O)Q*S+U,W-Y.[/]\x30_\x31\x61\x32\x63\x33\x65");
		sb.Append("\x34g\x35i\x36k\x37m\x38o\x39q:s;u<w=y>{?}@\x7F\x2\x81\x2\x83");
		sb.Append("\x41\x85\x2\x87\x2\x89\x2\x8B\x2\x8D\x42\x8F\x2\x91\x2\x93\x43");
		sb.Append("\x95\x44\x3\x2\r\x5\x2\x43\\\x61\x61\x63|\x3\x2\x32;\x4\x2Z");
		sb.Append("Zzz\x5\x2\x32;\x43H\x63h\x4\x2\x44\x44\x64\x64\x3\x2\x32\x33");
		sb.Append("\x4\x2--//\x6\x2\f\f\xF\xF))^^\f\x2$$))\x41\x41^^\x63\x64hh");
		sb.Append("ppttvvxx\x5\x2\v\f\xF\xF\"\"\x4\x2\f\f\xF\xF\x1BA\x2\x3\x3\x2");
		sb.Append("\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2");
		sb.Append("\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3");
		sb.Append("\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2");
		sb.Append("\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2");
		sb.Append("\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3");
		sb.Append("\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2");
		sb.Append("-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2");
		sb.Append("\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2");
		sb.Append("\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3");
		sb.Append("\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2");
		sb.Append("\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2");
		sb.Append("\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3");
		sb.Append("\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2");
		sb.Append("_\x3\x2\x2\x2\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3");
		sb.Append("\x2\x2\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x2");
		sb.Append("m\x3\x2\x2\x2\x2o\x3\x2\x2\x2\x2q\x3\x2\x2\x2\x2s\x3\x2\x2\x2");
		sb.Append("\x2u\x3\x2\x2\x2\x2w\x3\x2\x2\x2\x2y\x3\x2\x2\x2\x2{\x3\x2\x2");
		sb.Append("\x2\x2}\x3\x2\x2\x2\x2\x83\x3\x2\x2\x2\x2\x8D\x3\x2\x2\x2\x2");
		sb.Append("\x93\x3\x2\x2\x2\x2\x95\x3\x2\x2\x2\x3\x97\x3\x2\x2\x2\x5\x9E");
		sb.Append("\x3\x2\x2\x2\a\xA0\x3\x2\x2\x2\t\xA2\x3\x2\x2\x2\v\xA9\x3\x2");
		sb.Append("\x2\x2\r\xAD\x3\x2\x2\x2\xF\xAF\x3\x2\x2\x2\x11\xB1\x3\x2\x2");
		sb.Append("\x2\x13\xB4\x3\x2\x2\x2\x15\xBB\x3\x2\x2\x2\x17\xBD\x3\x2\x2");
		sb.Append("\x2\x19\xBF\x3\x2\x2\x2\x1B\xC4\x3\x2\x2\x2\x1D\xC6\x3\x2\x2");
		sb.Append("\x2\x1F\xC8\x3\x2\x2\x2!\xCA\x3\x2\x2\x2#\xD0\x3\x2\x2\x2%\xD4");
		sb.Append("\x3\x2\x2\x2\'\xD7\x3\x2\x2\x2)\xDA\x3\x2\x2\x2+\xDF\x3\x2\x2");
		sb.Append("\x2-\xE6\x3\x2\x2\x2/\xE9\x3\x2\x2\x2\x31\xEC\x3\x2\x2\x2\x33");
		sb.Append("\xEF\x3\x2\x2\x2\x35\xF2\x3\x2\x2\x2\x37\xF5\x3\x2\x2\x2\x39");
		sb.Append("\xF8\x3\x2\x2\x2;\xFC\x3\x2\x2\x2=\x100\x3\x2\x2\x2?\x103\x3");
		sb.Append("\x2\x2\x2\x41\x106\x3\x2\x2\x2\x43\x109\x3\x2\x2\x2\x45\x10B");
		sb.Append("\x3\x2\x2\x2G\x10E\x3\x2\x2\x2I\x110\x3\x2\x2\x2K\x112\x3\x2");
		sb.Append("\x2\x2M\x114\x3\x2\x2\x2O\x116\x3\x2\x2\x2Q\x118\x3\x2\x2\x2");
		sb.Append("S\x11A\x3\x2\x2\x2U\x11C\x3\x2\x2\x2W\x11E\x3\x2\x2\x2Y\x120");
		sb.Append("\x3\x2\x2\x2[\x123\x3\x2\x2\x2]\x126\x3\x2\x2\x2_\x128\x3\x2");
		sb.Append("\x2\x2\x61\x12A\x3\x2\x2\x2\x63\x12D\x3\x2\x2\x2\x65\x130\x3");
		sb.Append("\x2\x2\x2g\x133\x3\x2\x2\x2i\x136\x3\x2\x2\x2k\x138\x3\x2\x2");
		sb.Append("\x2m\x13A\x3\x2\x2\x2o\x13C\x3\x2\x2\x2q\x13F\x3\x2\x2\x2s\x142");
		sb.Append("\x3\x2\x2\x2u\x147\x3\x2\x2\x2w\x14B\x3\x2\x2\x2y\x151\x3\x2");
		sb.Append("\x2\x2{\x156\x3\x2\x2\x2}\x15D\x3\x2\x2\x2\x7F\x165\x3\x2\x2");
		sb.Append("\x2\x81\x167\x3\x2\x2\x2\x83\x16D\x3\x2\x2\x2\x85\x16F\x3\x2");
		sb.Append("\x2\x2\x87\x176\x3\x2\x2\x2\x89\x17E\x3\x2\x2\x2\x8B\x186\x3");
		sb.Append("\x2\x2\x2\x8D\x193\x3\x2\x2\x2\x8F\x19E\x3\x2\x2\x2\x91\x1A0");
		sb.Append("\x3\x2\x2\x2\x93\x1A4\x3\x2\x2\x2\x95\x1AA\x3\x2\x2\x2\x97\x98");
		sb.Append("\ak\x2\x2\x98\x99\ao\x2\x2\x99\x9A\ar\x2\x2\x9A\x9B\aq\x2\x2");
		sb.Append("\x9B\x9C\at\x2\x2\x9C\x9D\av\x2\x2\x9D\x4\x3\x2\x2\x2\x9E\x9F");
		sb.Append("\a$\x2\x2\x9F\x6\x3\x2\x2\x2\xA0\xA1\a=\x2\x2\xA1\b\x3\x2\x2");
		sb.Append("\x2\xA2\xA3\ai\x2\x2\xA3\xA4\an\x2\x2\xA4\xA5\aq\x2\x2\xA5\xA6");
		sb.Append("\a\x64\x2\x2\xA6\xA7\a\x63\x2\x2\xA7\xA8\an\x2\x2\xA8\n\x3\x2");
		sb.Append("\x2\x2\xA9\xAA\a\x66\x2\x2\xAA\xAB\ag\x2\x2\xAB\xAC\ah\x2\x2");
		sb.Append("\xAC\f\x3\x2\x2\x2\xAD\xAE\a*\x2\x2\xAE\xE\x3\x2\x2\x2\xAF\xB0");
		sb.Append("\a+\x2\x2\xB0\x10\x3\x2\x2\x2\xB1\xB2\a/\x2\x2\xB2\xB3\a@\x2");
		sb.Append("\x2\xB3\x12\x3\x2\x2\x2\xB4\xB5\au\x2\x2\xB5\xB6\av\x2\x2\xB6");
		sb.Append("\xB7\at\x2\x2\xB7\xB8\aw\x2\x2\xB8\xB9\a\x65\x2\x2\xB9\xBA\a");
		sb.Append("v\x2\x2\xBA\x14\x3\x2\x2\x2\xBB\xBC\a}\x2\x2\xBC\x16\x3\x2\x2");
		sb.Append("\x2\xBD\xBE\a\x7F\x2\x2\xBE\x18\x3\x2\x2\x2\xBF\xC0\ag\x2\x2");
		sb.Append("\xC0\xC1\ap\x2\x2\xC1\xC2\aw\x2\x2\xC2\xC3\ao\x2\x2\xC3\x1A");
		sb.Append("\x3\x2\x2\x2\xC4\xC5\a.\x2\x2\xC5\x1C\x3\x2\x2\x2\xC6\xC7\a");
		sb.Append("<\x2\x2\xC7\x1E\x3\x2\x2\x2\xC8\xC9\a?\x2\x2\xC9 \x3\x2\x2\x2");
		sb.Append("\xCA\xCB\ay\x2\x2\xCB\xCC\aj\x2\x2\xCC\xCD\ak\x2\x2\xCD\xCE");
		sb.Append("\an\x2\x2\xCE\xCF\ag\x2\x2\xCF\"\x3\x2\x2\x2\xD0\xD1\ah\x2\x2");
		sb.Append("\xD1\xD2\aq\x2\x2\xD2\xD3\at\x2\x2\xD3$\x3\x2\x2\x2\xD4\xD5");
		sb.Append("\ak\x2\x2\xD5\xD6\ap\x2\x2\xD6&\x3\x2\x2\x2\xD7\xD8\ak\x2\x2");
		sb.Append("\xD8\xD9\ah\x2\x2\xD9(\x3\x2\x2\x2\xDA\xDB\ag\x2\x2\xDB\xDC");
		sb.Append("\an\x2\x2\xDC\xDD\au\x2\x2\xDD\xDE\ag\x2\x2\xDE*\x3\x2\x2\x2");
		sb.Append("\xDF\xE0\at\x2\x2\xE0\xE1\ag\x2\x2\xE1\xE2\av\x2\x2\xE2\xE3");
		sb.Append("\aw\x2\x2\xE3\xE4\at\x2\x2\xE4\xE5\ap\x2\x2\xE5,\x3\x2\x2\x2");
		sb.Append("\xE6\xE7\a<\x2\x2\xE7\xE8\a?\x2\x2\xE8.\x3\x2\x2\x2\xE9\xEA");
		sb.Append("\a,\x2\x2\xEA\xEB\a?\x2\x2\xEB\x30\x3\x2\x2\x2\xEC\xED\a\x31");
		sb.Append("\x2\x2\xED\xEE\a?\x2\x2\xEE\x32\x3\x2\x2\x2\xEF\xF0\a\'\x2\x2");
		sb.Append("\xF0\xF1\a?\x2\x2\xF1\x34\x3\x2\x2\x2\xF2\xF3\a-\x2\x2\xF3\xF4");
		sb.Append("\a?\x2\x2\xF4\x36\x3\x2\x2\x2\xF5\xF6\a/\x2\x2\xF6\xF7\a?\x2");
		sb.Append("\x2\xF7\x38\x3\x2\x2\x2\xF8\xF9\a>\x2\x2\xF9\xFA\a>\x2\x2\xFA");
		sb.Append("\xFB\a?\x2\x2\xFB:\x3\x2\x2\x2\xFC\xFD\a@\x2\x2\xFD\xFE\a@\x2");
		sb.Append("\x2\xFE\xFF\a?\x2\x2\xFF<\x3\x2\x2\x2\x100\x101\a(\x2\x2\x101");
		sb.Append("\x102\a?\x2\x2\x102>\x3\x2\x2\x2\x103\x104\a`\x2\x2\x104\x105");
		sb.Append("\a?\x2\x2\x105@\x3\x2\x2\x2\x106\x107\a~\x2\x2\x107\x108\a?");
		sb.Append("\x2\x2\x108\x42\x3\x2\x2\x2\x109\x10A\a]\x2\x2\x10A\x44\x3\x2");
		sb.Append("\x2\x2\x10B\x10C\a\x30\x2\x2\x10C\x10D\a\x30\x2\x2\x10D\x46");
		sb.Append("\x3\x2\x2\x2\x10E\x10F\a_\x2\x2\x10FH\x3\x2\x2\x2\x110\x111");
		sb.Append("\a\x30\x2\x2\x111J\x3\x2\x2\x2\x112\x113\a/\x2\x2\x113L\x3\x2");
		sb.Append("\x2\x2\x114\x115\a#\x2\x2\x115N\x3\x2\x2\x2\x116\x117\a\x80");
		sb.Append("\x2\x2\x117P\x3\x2\x2\x2\x118\x119\a,\x2\x2\x119R\x3\x2\x2\x2");
		sb.Append("\x11A\x11B\a\x31\x2\x2\x11BT\x3\x2\x2\x2\x11C\x11D\a\'\x2\x2");
		sb.Append("\x11DV\x3\x2\x2\x2\x11E\x11F\a-\x2\x2\x11FX\x3\x2\x2\x2\x120");
		sb.Append("\x121\a@\x2\x2\x121\x122\a@\x2\x2\x122Z\x3\x2\x2\x2\x123\x124");
		sb.Append("\a>\x2\x2\x124\x125\a>\x2\x2\x125\\\x3\x2\x2\x2\x126\x127\a");
		sb.Append(">\x2\x2\x127^\x3\x2\x2\x2\x128\x129\a@\x2\x2\x129`\x3\x2\x2");
		sb.Append("\x2\x12A\x12B\a>\x2\x2\x12B\x12C\a?\x2\x2\x12C\x62\x3\x2\x2");
		sb.Append("\x2\x12D\x12E\a@\x2\x2\x12E\x12F\a?\x2\x2\x12F\x64\x3\x2\x2");
		sb.Append("\x2\x130\x131\a?\x2\x2\x131\x132\a?\x2\x2\x132\x66\x3\x2\x2");
		sb.Append("\x2\x133\x134\a#\x2\x2\x134\x135\a?\x2\x2\x135h\x3\x2\x2\x2");
		sb.Append("\x136\x137\a(\x2\x2\x137j\x3\x2\x2\x2\x138\x139\a~\x2\x2\x139");
		sb.Append("l\x3\x2\x2\x2\x13A\x13B\a`\x2\x2\x13Bn\x3\x2\x2\x2\x13C\x13D");
		sb.Append("\a(\x2\x2\x13D\x13E\a(\x2\x2\x13Ep\x3\x2\x2\x2\x13F\x140\a~");
		sb.Append("\x2\x2\x140\x141\a~\x2\x2\x141r\x3\x2\x2\x2\x142\x143\ax\x2");
		sb.Append("\x2\x143\x144\aq\x2\x2\x144\x145\ak\x2\x2\x145\x146\a\x66\x2");
		sb.Append("\x2\x146t\x3\x2\x2\x2\x147\x148\ak\x2\x2\x148\x149\ap\x2\x2");
		sb.Append("\x149\x14A\av\x2\x2\x14Av\x3\x2\x2\x2\x14B\x14C\ah\x2\x2\x14C");
		sb.Append("\x14D\an\x2\x2\x14D\x14E\aq\x2\x2\x14E\x14F\a\x63\x2\x2\x14F");
		sb.Append("\x150\av\x2\x2\x150x\x3\x2\x2\x2\x151\x152\a\x64\x2\x2\x152");
		sb.Append("\x153\aq\x2\x2\x153\x154\aq\x2\x2\x154\x155\an\x2\x2\x155z\x3");
		sb.Append("\x2\x2\x2\x156\x157\au\x2\x2\x157\x158\av\x2\x2\x158\x159\a");
		sb.Append("t\x2\x2\x159\x15A\ak\x2\x2\x15A\x15B\ap\x2\x2\x15B\x15C\ai\x2");
		sb.Append("\x2\x15C|\x3\x2\x2\x2\x15D\x162\x5\x7F@\x2\x15E\x161\x5\x7F");
		sb.Append("@\x2\x15F\x161\x5\x81\x41\x2\x160\x15E\x3\x2\x2\x2\x160\x15F");
		sb.Append("\x3\x2\x2\x2\x161\x164\x3\x2\x2\x2\x162\x160\x3\x2\x2\x2\x162");
		sb.Append("\x163\x3\x2\x2\x2\x163~\x3\x2\x2\x2\x164\x162\x3\x2\x2\x2\x165");
		sb.Append("\x166\t\x2\x2\x2\x166\x80\x3\x2\x2\x2\x167\x168\t\x3\x2\x2\x168");
		sb.Append("\x82\x3\x2\x2\x2\x169\x16E\x5\x85\x43\x2\x16A\x16E\x5\x87\x44");
		sb.Append("\x2\x16B\x16E\x5\x89\x45\x2\x16C\x16E\x5\x8B\x46\x2\x16D\x169");
		sb.Append("\x3\x2\x2\x2\x16D\x16A\x3\x2\x2\x2\x16D\x16B\x3\x2\x2\x2\x16D");
		sb.Append("\x16C\x3\x2\x2\x2\x16E\x84\x3\x2\x2\x2\x16F\x170\a\x32\x2\x2");
		sb.Append("\x170\x172\t\x4\x2\x2\x171\x173\t\x5\x2\x2\x172\x171\x3\x2\x2");
		sb.Append("\x2\x173\x174\x3\x2\x2\x2\x174\x172\x3\x2\x2\x2\x174\x175\x3");
		sb.Append("\x2\x2\x2\x175\x86\x3\x2\x2\x2\x176\x177\a\x32\x2\x2\x177\x179");
		sb.Append("\t\x6\x2\x2\x178\x17A\t\a\x2\x2\x179\x178\x3\x2\x2\x2\x17A\x17B");
		sb.Append("\x3\x2\x2\x2\x17B\x179\x3\x2\x2\x2\x17B\x17C\x3\x2\x2\x2\x17C");
		sb.Append("\x88\x3\x2\x2\x2\x17D\x17F\t\b\x2\x2\x17E\x17D\x3\x2\x2\x2\x17E");
		sb.Append("\x17F\x3\x2\x2\x2\x17F\x181\x3\x2\x2\x2\x180\x182\x5\x81\x41");
		sb.Append("\x2\x181\x180\x3\x2\x2\x2\x182\x183\x3\x2\x2\x2\x183\x181\x3");
		sb.Append("\x2\x2\x2\x183\x184\x3\x2\x2\x2\x184\x8A\x3\x2\x2\x2\x185\x187");
		sb.Append("\t\b\x2\x2\x186\x185\x3\x2\x2\x2\x186\x187\x3\x2\x2\x2\x187");
		sb.Append("\x189\x3\x2\x2\x2\x188\x18A\x5\x81\x41\x2\x189\x188\x3\x2\x2");
		sb.Append("\x2\x18A\x18B\x3\x2\x2\x2\x18B\x189\x3\x2\x2\x2\x18B\x18C\x3");
		sb.Append("\x2\x2\x2\x18C\x18D\x3\x2\x2\x2\x18D\x18F\a\x30\x2\x2\x18E\x190");
		sb.Append("\x5\x81\x41\x2\x18F\x18E\x3\x2\x2\x2\x190\x191\x3\x2\x2\x2\x191");
		sb.Append("\x18F\x3\x2\x2\x2\x191\x192\x3\x2\x2\x2\x192\x8C\x3\x2\x2\x2");
		sb.Append("\x193\x197\a$\x2\x2\x194\x196\x5\x8FH\x2\x195\x194\x3\x2\x2");
		sb.Append("\x2\x196\x199\x3\x2\x2\x2\x197\x195\x3\x2\x2\x2\x197\x198\x3");
		sb.Append("\x2\x2\x2\x198\x19A\x3\x2\x2\x2\x199\x197\x3\x2\x2\x2\x19A\x19B");
		sb.Append("\a$\x2\x2\x19B\x8E\x3\x2\x2\x2\x19C\x19F\n\t\x2\x2\x19D\x19F");
		sb.Append("\x5\x91I\x2\x19E\x19C\x3\x2\x2\x2\x19E\x19D\x3\x2\x2\x2\x19F");
		sb.Append("\x90\x3\x2\x2\x2\x1A0\x1A1\a^\x2\x2\x1A1\x1A2\t\n\x2\x2\x1A2");
		sb.Append("\x92\x3\x2\x2\x2\x1A3\x1A5\t\v\x2\x2\x1A4\x1A3\x3\x2\x2\x2\x1A5");
		sb.Append("\x1A6\x3\x2\x2\x2\x1A6\x1A4\x3\x2\x2\x2\x1A6\x1A7\x3\x2\x2\x2");
		sb.Append("\x1A7\x1A8\x3\x2\x2\x2\x1A8\x1A9\bJ\x2\x2\x1A9\x94\x3\x2\x2");
		sb.Append("\x2\x1AA\x1AE\a%\x2\x2\x1AB\x1AD\n\f\x2\x2\x1AC\x1AB\x3\x2\x2");
		sb.Append("\x2\x1AD\x1B0\x3\x2\x2\x2\x1AE\x1AC\x3\x2\x2\x2\x1AE\x1AF\x3");
		sb.Append("\x2\x2\x2\x1AF\x1B1\x3\x2\x2\x2\x1B0\x1AE\x3\x2\x2\x2\x1B1\x1B2");
		sb.Append("\bK\x2\x2\x1B2\x96\x3\x2\x2\x2\x11\x2\x160\x162\x16D\x174\x17B");
		sb.Append("\x17E\x183\x186\x18B\x191\x197\x19E\x1A6\x1AE\x3\b\x2\x2");
	    return sb.ToString();
	}

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());


}
