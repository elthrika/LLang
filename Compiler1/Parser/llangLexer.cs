//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from llang.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public partial class llangLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, T__56=57, T__57=58, T__58=59, 
		T__59=60, T__60=61, T__61=62, T__62=63, Iden=64, Number=65, String=66, 
		Whitespace=67, Comment=68;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
		"T__57", "T__58", "T__59", "T__60", "T__61", "T__62", "Iden", "Alpha", 
		"Digit", "Number", "HexNum", "BinNum", "IntNum", "FloatNum", "String", 
		"StringChar", "EscapeSequence", "Whitespace", "Comment"
	};


	public llangLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'import'", "'\"'", "';'", "'global'", "'def'", "'('", "')'", "'->'", 
		"'struct'", "'{'", "'}'", "'enum'", "','", "':'", "'='", "'while'", "'for'", 
		"'in'", "'if'", "'else'", "'return'", "':='", "'defer'", "'*='", "'/='", 
		"'%='", "'+='", "'-='", "'<<='", "'>>='", "'&='", "'^='", "'|='", "'new'", 
		"'['", "']'", "'.'", "'..'", "'-'", "'!'", "'~'", "'*'", "'/'", "'%'", 
		"'+'", "'>>'", "'<<'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'&'", 
		"'|'", "'^'", "'&&'", "'||'", "'void'", "'int'", "'float'", "'bool'", 
		"'string'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, "Iden", "Number", "String", "Whitespace", "Comment"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "llang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	static llangLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static string _serializedATN = _serializeATN();
	private static string _serializeATN()
	{
	    StringBuilder sb = new StringBuilder();
	    sb.Append("\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x46");
		sb.Append("\x1C1\b\x1\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6");
		sb.Append("\t\x6\x4\a\t\a\x4\b\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f");
		sb.Append("\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10\t\x10\x4\x11\t\x11\x4");
		sb.Append("\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15\x4\x16\t\x16");
		sb.Append("\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B");
		sb.Append("\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4");
		sb.Append(" \t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4");
		sb.Append("(\t(\x4)\t)\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30");
		sb.Append("\t\x30\x4\x31\t\x31\x4\x32\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4");
		sb.Append("\x35\t\x35\x4\x36\t\x36\x4\x37\t\x37\x4\x38\t\x38\x4\x39\t\x39");
		sb.Append("\x4:\t:\x4;\t;\x4<\t<\x4=\t=\x4>\t>\x4?\t?\x4@\t@\x4\x41\t\x41");
		sb.Append("\x4\x42\t\x42\x4\x43\t\x43\x4\x44\t\x44\x4\x45\t\x45\x4\x46");
		sb.Append("\t\x46\x4G\tG\x4H\tH\x4I\tI\x4J\tJ\x4K\tK\x4L\tL\x4M\tM\x3\x2");
		sb.Append("\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4");
		sb.Append("\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6");
		sb.Append("\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3");
		sb.Append("\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3");
		sb.Append("\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11");
		sb.Append("\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x13\x3");
		sb.Append("\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15");
		sb.Append("\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3");
		sb.Append("\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18");
		sb.Append("\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3");
		sb.Append("\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E");
		sb.Append("\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3!\x3");
		sb.Append("!\x3!\x3\"\x3\"\x3\"\x3#\x3#\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3");
		sb.Append("&\x3\'\x3\'\x3\'\x3(\x3(\x3)\x3)\x3*\x3*\x3+\x3+\x3,\x3,\x3");
		sb.Append("-\x3-\x3.\x3.\x3/\x3/\x3/\x3\x30\x3\x30\x3\x30\x3\x31\x3\x31");
		sb.Append("\x3\x32\x3\x32\x3\x33\x3\x33\x3\x33\x3\x34\x3\x34\x3\x34\x3");
		sb.Append("\x35\x3\x35\x3\x35\x3\x36\x3\x36\x3\x36\x3\x37\x3\x37\x3\x38");
		sb.Append("\x3\x38\x3\x39\x3\x39\x3:\x3:\x3:\x3;\x3;\x3;\x3<\x3<\x3<\x3");
		sb.Append("<\x3<\x3=\x3=\x3=\x3=\x3>\x3>\x3>\x3>\x3>\x3>\x3?\x3?\x3?\x3");
		sb.Append("?\x3?\x3@\x3@\x3@\x3@\x3@\x3@\x3@\x3\x41\x3\x41\x3\x41\a\x41");
		sb.Append("\x16F\n\x41\f\x41\xE\x41\x172\v\x41\x3\x42\x3\x42\x3\x43\x3");
		sb.Append("\x43\x3\x44\x3\x44\x3\x44\x3\x44\x5\x44\x17C\n\x44\x3\x45\x3");
		sb.Append("\x45\x3\x45\x6\x45\x181\n\x45\r\x45\xE\x45\x182\x3\x46\x3\x46");
		sb.Append("\x3\x46\x6\x46\x188\n\x46\r\x46\xE\x46\x189\x3G\x5G\x18D\nG");
		sb.Append("\x3G\x6G\x190\nG\rG\xEG\x191\x3H\x5H\x195\nH\x3H\x6H\x198\n");
		sb.Append("H\rH\xEH\x199\x3H\x3H\x6H\x19E\nH\rH\xEH\x19F\x3I\x3I\aI\x1A4");
		sb.Append("\nI\fI\xEI\x1A7\vI\x3I\x3I\x3J\x3J\x5J\x1AD\nJ\x3K\x3K\x3K\x3");
		sb.Append("L\x6L\x1B3\nL\rL\xEL\x1B4\x3L\x3L\x3M\x3M\aM\x1BB\nM\fM\xEM");
		sb.Append("\x1BE\vM\x3M\x3M\x2\x2N\x3\x3\x5\x4\a\x5\t\x6\v\a\r\b\xF\t\x11");
		sb.Append("\n\x13\v\x15\f\x17\r\x19\xE\x1B\xF\x1D\x10\x1F\x11!\x12#\x13");
		sb.Append("%\x14\'\x15)\x16+\x17-\x18/\x19\x31\x1A\x33\x1B\x35\x1C\x37");
		sb.Append("\x1D\x39\x1E;\x1F= ?!\x41\"\x43#\x45$G%I&K\'M(O)Q*S+U,W-Y.[");
		sb.Append("/]\x30_\x31\x61\x32\x63\x33\x65\x34g\x35i\x36k\x37m\x38o\x39");
		sb.Append("q:s;u<w=y>{?}@\x7F\x41\x81\x42\x83\x2\x85\x2\x87\x43\x89\x2");
		sb.Append("\x8B\x2\x8D\x2\x8F\x2\x91\x44\x93\x2\x95\x2\x97\x45\x99\x46");
		sb.Append("\x3\x2\r\x5\x2\x43\\\x61\x61\x63|\x3\x2\x32;\x4\x2ZZzz\x5\x2");
		sb.Append("\x32;\x43H\x63h\x4\x2\x44\x44\x64\x64\x3\x2\x32\x33\x4\x2--");
		sb.Append("//\x6\x2\f\f\xF\xF))^^\f\x2$$))\x41\x41^^\x63\x64hhppttvvxx");
		sb.Append("\x5\x2\v\f\xF\xF\"\"\x4\x2\f\f\xF\xF\x1C8\x2\x3\x3\x2\x2\x2");
		sb.Append("\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3");
		sb.Append("\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2");
		sb.Append("\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2");
		sb.Append("\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2");
		sb.Append("\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2");
		sb.Append("\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3");
		sb.Append("\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2");
		sb.Append("\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2");
		sb.Append("\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2");
		sb.Append("\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2");
		sb.Append("\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2");
		sb.Append("\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2");
		sb.Append("\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2_\x3");
		sb.Append("\x2\x2\x2\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3\x2");
		sb.Append("\x2\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x2m\x3");
		sb.Append("\x2\x2\x2\x2o\x3\x2\x2\x2\x2q\x3\x2\x2\x2\x2s\x3\x2\x2\x2\x2");
		sb.Append("u\x3\x2\x2\x2\x2w\x3\x2\x2\x2\x2y\x3\x2\x2\x2\x2{\x3\x2\x2\x2");
		sb.Append("\x2}\x3\x2\x2\x2\x2\x7F\x3\x2\x2\x2\x2\x81\x3\x2\x2\x2\x2\x87");
		sb.Append("\x3\x2\x2\x2\x2\x91\x3\x2\x2\x2\x2\x97\x3\x2\x2\x2\x2\x99\x3");
		sb.Append("\x2\x2\x2\x3\x9B\x3\x2\x2\x2\x5\xA2\x3\x2\x2\x2\a\xA4\x3\x2");
		sb.Append("\x2\x2\t\xA6\x3\x2\x2\x2\v\xAD\x3\x2\x2\x2\r\xB1\x3\x2\x2\x2");
		sb.Append("\xF\xB3\x3\x2\x2\x2\x11\xB5\x3\x2\x2\x2\x13\xB8\x3\x2\x2\x2");
		sb.Append("\x15\xBF\x3\x2\x2\x2\x17\xC1\x3\x2\x2\x2\x19\xC3\x3\x2\x2\x2");
		sb.Append("\x1B\xC8\x3\x2\x2\x2\x1D\xCA\x3\x2\x2\x2\x1F\xCC\x3\x2\x2\x2");
		sb.Append("!\xCE\x3\x2\x2\x2#\xD4\x3\x2\x2\x2%\xD8\x3\x2\x2\x2\'\xDB\x3");
		sb.Append("\x2\x2\x2)\xDE\x3\x2\x2\x2+\xE3\x3\x2\x2\x2-\xEA\x3\x2\x2\x2");
		sb.Append("/\xED\x3\x2\x2\x2\x31\xF3\x3\x2\x2\x2\x33\xF6\x3\x2\x2\x2\x35");
		sb.Append("\xF9\x3\x2\x2\x2\x37\xFC\x3\x2\x2\x2\x39\xFF\x3\x2\x2\x2;\x102");
		sb.Append("\x3\x2\x2\x2=\x106\x3\x2\x2\x2?\x10A\x3\x2\x2\x2\x41\x10D\x3");
		sb.Append("\x2\x2\x2\x43\x110\x3\x2\x2\x2\x45\x113\x3\x2\x2\x2G\x117\x3");
		sb.Append("\x2\x2\x2I\x119\x3\x2\x2\x2K\x11B\x3\x2\x2\x2M\x11D\x3\x2\x2");
		sb.Append("\x2O\x120\x3\x2\x2\x2Q\x122\x3\x2\x2\x2S\x124\x3\x2\x2\x2U\x126");
		sb.Append("\x3\x2\x2\x2W\x128\x3\x2\x2\x2Y\x12A\x3\x2\x2\x2[\x12C\x3\x2");
		sb.Append("\x2\x2]\x12E\x3\x2\x2\x2_\x131\x3\x2\x2\x2\x61\x134\x3\x2\x2");
		sb.Append("\x2\x63\x136\x3\x2\x2\x2\x65\x138\x3\x2\x2\x2g\x13B\x3\x2\x2");
		sb.Append("\x2i\x13E\x3\x2\x2\x2k\x141\x3\x2\x2\x2m\x144\x3\x2\x2\x2o\x146");
		sb.Append("\x3\x2\x2\x2q\x148\x3\x2\x2\x2s\x14A\x3\x2\x2\x2u\x14D\x3\x2");
		sb.Append("\x2\x2w\x150\x3\x2\x2\x2y\x155\x3\x2\x2\x2{\x159\x3\x2\x2\x2");
		sb.Append("}\x15F\x3\x2\x2\x2\x7F\x164\x3\x2\x2\x2\x81\x16B\x3\x2\x2\x2");
		sb.Append("\x83\x173\x3\x2\x2\x2\x85\x175\x3\x2\x2\x2\x87\x17B\x3\x2\x2");
		sb.Append("\x2\x89\x17D\x3\x2\x2\x2\x8B\x184\x3\x2\x2\x2\x8D\x18C\x3\x2");
		sb.Append("\x2\x2\x8F\x194\x3\x2\x2\x2\x91\x1A1\x3\x2\x2\x2\x93\x1AC\x3");
		sb.Append("\x2\x2\x2\x95\x1AE\x3\x2\x2\x2\x97\x1B2\x3\x2\x2\x2\x99\x1B8");
		sb.Append("\x3\x2\x2\x2\x9B\x9C\ak\x2\x2\x9C\x9D\ao\x2\x2\x9D\x9E\ar\x2");
		sb.Append("\x2\x9E\x9F\aq\x2\x2\x9F\xA0\at\x2\x2\xA0\xA1\av\x2\x2\xA1\x4");
		sb.Append("\x3\x2\x2\x2\xA2\xA3\a$\x2\x2\xA3\x6\x3\x2\x2\x2\xA4\xA5\a=");
		sb.Append("\x2\x2\xA5\b\x3\x2\x2\x2\xA6\xA7\ai\x2\x2\xA7\xA8\an\x2\x2\xA8");
		sb.Append("\xA9\aq\x2\x2\xA9\xAA\a\x64\x2\x2\xAA\xAB\a\x63\x2\x2\xAB\xAC");
		sb.Append("\an\x2\x2\xAC\n\x3\x2\x2\x2\xAD\xAE\a\x66\x2\x2\xAE\xAF\ag\x2");
		sb.Append("\x2\xAF\xB0\ah\x2\x2\xB0\f\x3\x2\x2\x2\xB1\xB2\a*\x2\x2\xB2");
		sb.Append("\xE\x3\x2\x2\x2\xB3\xB4\a+\x2\x2\xB4\x10\x3\x2\x2\x2\xB5\xB6");
		sb.Append("\a/\x2\x2\xB6\xB7\a@\x2\x2\xB7\x12\x3\x2\x2\x2\xB8\xB9\au\x2");
		sb.Append("\x2\xB9\xBA\av\x2\x2\xBA\xBB\at\x2\x2\xBB\xBC\aw\x2\x2\xBC\xBD");
		sb.Append("\a\x65\x2\x2\xBD\xBE\av\x2\x2\xBE\x14\x3\x2\x2\x2\xBF\xC0\a");
		sb.Append("}\x2\x2\xC0\x16\x3\x2\x2\x2\xC1\xC2\a\x7F\x2\x2\xC2\x18\x3\x2");
		sb.Append("\x2\x2\xC3\xC4\ag\x2\x2\xC4\xC5\ap\x2\x2\xC5\xC6\aw\x2\x2\xC6");
		sb.Append("\xC7\ao\x2\x2\xC7\x1A\x3\x2\x2\x2\xC8\xC9\a.\x2\x2\xC9\x1C\x3");
		sb.Append("\x2\x2\x2\xCA\xCB\a<\x2\x2\xCB\x1E\x3\x2\x2\x2\xCC\xCD\a?\x2");
		sb.Append("\x2\xCD \x3\x2\x2\x2\xCE\xCF\ay\x2\x2\xCF\xD0\aj\x2\x2\xD0\xD1");
		sb.Append("\ak\x2\x2\xD1\xD2\an\x2\x2\xD2\xD3\ag\x2\x2\xD3\"\x3\x2\x2\x2");
		sb.Append("\xD4\xD5\ah\x2\x2\xD5\xD6\aq\x2\x2\xD6\xD7\at\x2\x2\xD7$\x3");
		sb.Append("\x2\x2\x2\xD8\xD9\ak\x2\x2\xD9\xDA\ap\x2\x2\xDA&\x3\x2\x2\x2");
		sb.Append("\xDB\xDC\ak\x2\x2\xDC\xDD\ah\x2\x2\xDD(\x3\x2\x2\x2\xDE\xDF");
		sb.Append("\ag\x2\x2\xDF\xE0\an\x2\x2\xE0\xE1\au\x2\x2\xE1\xE2\ag\x2\x2");
		sb.Append("\xE2*\x3\x2\x2\x2\xE3\xE4\at\x2\x2\xE4\xE5\ag\x2\x2\xE5\xE6");
		sb.Append("\av\x2\x2\xE6\xE7\aw\x2\x2\xE7\xE8\at\x2\x2\xE8\xE9\ap\x2\x2");
		sb.Append("\xE9,\x3\x2\x2\x2\xEA\xEB\a<\x2\x2\xEB\xEC\a?\x2\x2\xEC.\x3");
		sb.Append("\x2\x2\x2\xED\xEE\a\x66\x2\x2\xEE\xEF\ag\x2\x2\xEF\xF0\ah\x2");
		sb.Append("\x2\xF0\xF1\ag\x2\x2\xF1\xF2\at\x2\x2\xF2\x30\x3\x2\x2\x2\xF3");
		sb.Append("\xF4\a,\x2\x2\xF4\xF5\a?\x2\x2\xF5\x32\x3\x2\x2\x2\xF6\xF7\a");
		sb.Append("\x31\x2\x2\xF7\xF8\a?\x2\x2\xF8\x34\x3\x2\x2\x2\xF9\xFA\a\'");
		sb.Append("\x2\x2\xFA\xFB\a?\x2\x2\xFB\x36\x3\x2\x2\x2\xFC\xFD\a-\x2\x2");
		sb.Append("\xFD\xFE\a?\x2\x2\xFE\x38\x3\x2\x2\x2\xFF\x100\a/\x2\x2\x100");
		sb.Append("\x101\a?\x2\x2\x101:\x3\x2\x2\x2\x102\x103\a>\x2\x2\x103\x104");
		sb.Append("\a>\x2\x2\x104\x105\a?\x2\x2\x105<\x3\x2\x2\x2\x106\x107\a@");
		sb.Append("\x2\x2\x107\x108\a@\x2\x2\x108\x109\a?\x2\x2\x109>\x3\x2\x2");
		sb.Append("\x2\x10A\x10B\a(\x2\x2\x10B\x10C\a?\x2\x2\x10C@\x3\x2\x2\x2");
		sb.Append("\x10D\x10E\a`\x2\x2\x10E\x10F\a?\x2\x2\x10F\x42\x3\x2\x2\x2");
		sb.Append("\x110\x111\a~\x2\x2\x111\x112\a?\x2\x2\x112\x44\x3\x2\x2\x2");
		sb.Append("\x113\x114\ap\x2\x2\x114\x115\ag\x2\x2\x115\x116\ay\x2\x2\x116");
		sb.Append("\x46\x3\x2\x2\x2\x117\x118\a]\x2\x2\x118H\x3\x2\x2\x2\x119\x11A");
		sb.Append("\a_\x2\x2\x11AJ\x3\x2\x2\x2\x11B\x11C\a\x30\x2\x2\x11CL\x3\x2");
		sb.Append("\x2\x2\x11D\x11E\a\x30\x2\x2\x11E\x11F\a\x30\x2\x2\x11FN\x3");
		sb.Append("\x2\x2\x2\x120\x121\a/\x2\x2\x121P\x3\x2\x2\x2\x122\x123\a#");
		sb.Append("\x2\x2\x123R\x3\x2\x2\x2\x124\x125\a\x80\x2\x2\x125T\x3\x2\x2");
		sb.Append("\x2\x126\x127\a,\x2\x2\x127V\x3\x2\x2\x2\x128\x129\a\x31\x2");
		sb.Append("\x2\x129X\x3\x2\x2\x2\x12A\x12B\a\'\x2\x2\x12BZ\x3\x2\x2\x2");
		sb.Append("\x12C\x12D\a-\x2\x2\x12D\\\x3\x2\x2\x2\x12E\x12F\a@\x2\x2\x12F");
		sb.Append("\x130\a@\x2\x2\x130^\x3\x2\x2\x2\x131\x132\a>\x2\x2\x132\x133");
		sb.Append("\a>\x2\x2\x133`\x3\x2\x2\x2\x134\x135\a>\x2\x2\x135\x62\x3\x2");
		sb.Append("\x2\x2\x136\x137\a@\x2\x2\x137\x64\x3\x2\x2\x2\x138\x139\a>");
		sb.Append("\x2\x2\x139\x13A\a?\x2\x2\x13A\x66\x3\x2\x2\x2\x13B\x13C\a@");
		sb.Append("\x2\x2\x13C\x13D\a?\x2\x2\x13Dh\x3\x2\x2\x2\x13E\x13F\a?\x2");
		sb.Append("\x2\x13F\x140\a?\x2\x2\x140j\x3\x2\x2\x2\x141\x142\a#\x2\x2");
		sb.Append("\x142\x143\a?\x2\x2\x143l\x3\x2\x2\x2\x144\x145\a(\x2\x2\x145");
		sb.Append("n\x3\x2\x2\x2\x146\x147\a~\x2\x2\x147p\x3\x2\x2\x2\x148\x149");
		sb.Append("\a`\x2\x2\x149r\x3\x2\x2\x2\x14A\x14B\a(\x2\x2\x14B\x14C\a(");
		sb.Append("\x2\x2\x14Ct\x3\x2\x2\x2\x14D\x14E\a~\x2\x2\x14E\x14F\a~\x2");
		sb.Append("\x2\x14Fv\x3\x2\x2\x2\x150\x151\ax\x2\x2\x151\x152\aq\x2\x2");
		sb.Append("\x152\x153\ak\x2\x2\x153\x154\a\x66\x2\x2\x154x\x3\x2\x2\x2");
		sb.Append("\x155\x156\ak\x2\x2\x156\x157\ap\x2\x2\x157\x158\av\x2\x2\x158");
		sb.Append("z\x3\x2\x2\x2\x159\x15A\ah\x2\x2\x15A\x15B\an\x2\x2\x15B\x15C");
		sb.Append("\aq\x2\x2\x15C\x15D\a\x63\x2\x2\x15D\x15E\av\x2\x2\x15E|\x3");
		sb.Append("\x2\x2\x2\x15F\x160\a\x64\x2\x2\x160\x161\aq\x2\x2\x161\x162");
		sb.Append("\aq\x2\x2\x162\x163\an\x2\x2\x163~\x3\x2\x2\x2\x164\x165\au");
		sb.Append("\x2\x2\x165\x166\av\x2\x2\x166\x167\at\x2\x2\x167\x168\ak\x2");
		sb.Append("\x2\x168\x169\ap\x2\x2\x169\x16A\ai\x2\x2\x16A\x80\x3\x2\x2");
		sb.Append("\x2\x16B\x170\x5\x83\x42\x2\x16C\x16F\x5\x83\x42\x2\x16D\x16F");
		sb.Append("\x5\x85\x43\x2\x16E\x16C\x3\x2\x2\x2\x16E\x16D\x3\x2\x2\x2\x16F");
		sb.Append("\x172\x3\x2\x2\x2\x170\x16E\x3\x2\x2\x2\x170\x171\x3\x2\x2\x2");
		sb.Append("\x171\x82\x3\x2\x2\x2\x172\x170\x3\x2\x2\x2\x173\x174\t\x2\x2");
		sb.Append("\x2\x174\x84\x3\x2\x2\x2\x175\x176\t\x3\x2\x2\x176\x86\x3\x2");
		sb.Append("\x2\x2\x177\x17C\x5\x89\x45\x2\x178\x17C\x5\x8B\x46\x2\x179");
		sb.Append("\x17C\x5\x8DG\x2\x17A\x17C\x5\x8FH\x2\x17B\x177\x3\x2\x2\x2");
		sb.Append("\x17B\x178\x3\x2\x2\x2\x17B\x179\x3\x2\x2\x2\x17B\x17A\x3\x2");
		sb.Append("\x2\x2\x17C\x88\x3\x2\x2\x2\x17D\x17E\a\x32\x2\x2\x17E\x180");
		sb.Append("\t\x4\x2\x2\x17F\x181\t\x5\x2\x2\x180\x17F\x3\x2\x2\x2\x181");
		sb.Append("\x182\x3\x2\x2\x2\x182\x180\x3\x2\x2\x2\x182\x183\x3\x2\x2\x2");
		sb.Append("\x183\x8A\x3\x2\x2\x2\x184\x185\a\x32\x2\x2\x185\x187\t\x6\x2");
		sb.Append("\x2\x186\x188\t\a\x2\x2\x187\x186\x3\x2\x2\x2\x188\x189\x3\x2");
		sb.Append("\x2\x2\x189\x187\x3\x2\x2\x2\x189\x18A\x3\x2\x2\x2\x18A\x8C");
		sb.Append("\x3\x2\x2\x2\x18B\x18D\t\b\x2\x2\x18C\x18B\x3\x2\x2\x2\x18C");
		sb.Append("\x18D\x3\x2\x2\x2\x18D\x18F\x3\x2\x2\x2\x18E\x190\x5\x85\x43");
		sb.Append("\x2\x18F\x18E\x3\x2\x2\x2\x190\x191\x3\x2\x2\x2\x191\x18F\x3");
		sb.Append("\x2\x2\x2\x191\x192\x3\x2\x2\x2\x192\x8E\x3\x2\x2\x2\x193\x195");
		sb.Append("\t\b\x2\x2\x194\x193\x3\x2\x2\x2\x194\x195\x3\x2\x2\x2\x195");
		sb.Append("\x197\x3\x2\x2\x2\x196\x198\x5\x85\x43\x2\x197\x196\x3\x2\x2");
		sb.Append("\x2\x198\x199\x3\x2\x2\x2\x199\x197\x3\x2\x2\x2\x199\x19A\x3");
		sb.Append("\x2\x2\x2\x19A\x19B\x3\x2\x2\x2\x19B\x19D\a\x30\x2\x2\x19C\x19E");
		sb.Append("\x5\x85\x43\x2\x19D\x19C\x3\x2\x2\x2\x19E\x19F\x3\x2\x2\x2\x19F");
		sb.Append("\x19D\x3\x2\x2\x2\x19F\x1A0\x3\x2\x2\x2\x1A0\x90\x3\x2\x2\x2");
		sb.Append("\x1A1\x1A5\a$\x2\x2\x1A2\x1A4\x5\x93J\x2\x1A3\x1A2\x3\x2\x2");
		sb.Append("\x2\x1A4\x1A7\x3\x2\x2\x2\x1A5\x1A3\x3\x2\x2\x2\x1A5\x1A6\x3");
		sb.Append("\x2\x2\x2\x1A6\x1A8\x3\x2\x2\x2\x1A7\x1A5\x3\x2\x2\x2\x1A8\x1A9");
		sb.Append("\a$\x2\x2\x1A9\x92\x3\x2\x2\x2\x1AA\x1AD\n\t\x2\x2\x1AB\x1AD");
		sb.Append("\x5\x95K\x2\x1AC\x1AA\x3\x2\x2\x2\x1AC\x1AB\x3\x2\x2\x2\x1AD");
		sb.Append("\x94\x3\x2\x2\x2\x1AE\x1AF\a^\x2\x2\x1AF\x1B0\t\n\x2\x2\x1B0");
		sb.Append("\x96\x3\x2\x2\x2\x1B1\x1B3\t\v\x2\x2\x1B2\x1B1\x3\x2\x2\x2\x1B3");
		sb.Append("\x1B4\x3\x2\x2\x2\x1B4\x1B2\x3\x2\x2\x2\x1B4\x1B5\x3\x2\x2\x2");
		sb.Append("\x1B5\x1B6\x3\x2\x2\x2\x1B6\x1B7\bL\x2\x2\x1B7\x98\x3\x2\x2");
		sb.Append("\x2\x1B8\x1BC\a%\x2\x2\x1B9\x1BB\n\f\x2\x2\x1BA\x1B9\x3\x2\x2");
		sb.Append("\x2\x1BB\x1BE\x3\x2\x2\x2\x1BC\x1BA\x3\x2\x2\x2\x1BC\x1BD\x3");
		sb.Append("\x2\x2\x2\x1BD\x1BF\x3\x2\x2\x2\x1BE\x1BC\x3\x2\x2\x2\x1BF\x1C0");
		sb.Append("\bM\x2\x2\x1C0\x9A\x3\x2\x2\x2\x11\x2\x16E\x170\x17B\x182\x189");
		sb.Append("\x18C\x191\x194\x199\x19F\x1A5\x1AC\x1B4\x1BC\x3\b\x2\x2");
	    return sb.ToString();
	}

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());


}
